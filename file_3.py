# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие
# только чисел. Проверить работу исключения на реальном примере. Запрашивать у пользователя данные
# и заполнять список необходимо только числами. Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду «stop». При этом скрипт завершается, сформированный список с числами
# выводится на экран.Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
# Во время ввода пользователем очередного элемента необходимо реализовать проверку типа элемента.
# Вносить его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести
# текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
from itertools import count


class DataCheck(Exception):
    def __init__(self, txt):
        self.txt = txt

my_list = list()
for i in count(1):
    try:
        my_data = input('Введите числовые данные или наберите stop для прекращения программы: ')
        if my_data=='stop':
            raise DataCheck('Вы закончили программу')
        elif my_data.isdigit():
            my_list.append(my_data)
        else:
            raise DataCheck('Вы ввели не числовые данные')
    except DataCheck as err:
        print(err)
    finally:
        if my_data == 'stop':
            print(f'Полученный список:{my_list}')
            break
